template header
minValue
maxValue
signalType
timePeriod
timeUnit
amountAppeared
operator
newEvent

package cepneuralink;

import sbnz.mrsandman.neuralinkapp.model.enums.SignalType;
import sbnz.mrsandman.neuralinkapp.model.events.*;
import sbnz.mrsandman.neuralinkapp.model.events.alcohol.*;
import sbnz.mrsandman.neuralinkapp.model.events.heartrate.*;
import sbnz.mrsandman.neuralinkapp.model.events.caffeine.*;
import sbnz.mrsandman.neuralinkapp.model.events.temperature.*;
import sbnz.mrsandman.neuralinkapp.model.events.light.*;
import java.util.Date;

template "classification-rules"

rule "Categorize Signal_@{row.rowNumber} - @{signalType} between @{minValue} and @{maxValue} and insert new @{newEvent}"
	no-loop true
	when
		s1: SignalEvent(signalType == SignalType.@{signalType}, value >= @{minValue}, value < @{maxValue})
	    Number(intValue @{operator} @{amountAppeared}) from accumulate(
	    	s2: SignalEvent(
	    		this != s1,
	    		signalType == SignalType.@{signalType},
	    		value >= @{minValue},
	    		value < @{maxValue},
	    		this meets[@{timePeriod}@{timeUnit}] s1
	    	),
	    	count(s2) 
	    )
        not(
            @{newEvent}() 
            over window:time(@{timePeriod}@{timeUnit})
        )
	then
		insert(new @{newEvent}());
	end

end template

